/*
Copyright 2019 @foostan
Copyright 2020 Drashna Jaelre <@drashna>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#include QMK_KEYBOARD_H
/* #include "features/swapper.h" */
// https://getreuer.info/posts/keyboards/caps-word/index.html
//#include "features/caps_word.h"

enum layers {
    _QWERTY,
    _NAV,
    _NUM,
    _RSYM,
    _LSYM,
    _FN
};

enum keycodes {
  QWERTY = SAFE_RANGE, // 0
  NAV,                 // 1
  NUM,                 // 2
  RSYM,                // 3
  LSYM,                // 4
  FN                  // 5
};

// Left-hand home row mods
#define HOME_A LCTL_T(KC_A)
#define HOME_S LALT_T(KC_S)
#define HOME_D LGUI_T(KC_D)
#define HOME_F LSFT_T(KC_F)

// Right-hand home row mods
#define HOME_J RSFT_T(KC_J)
#define HOME_K RGUI_T(KC_K)
#define HOME_L LALT_T(KC_L) // Right alt doesn't work with M-x in Emacs
#define HOME_QT RCTL_T(KC_QUOT)

// Thumb cluster mods
#define TH_TAB LT(_RSYM, KC_TAB)
#define TH_SPC LT(_NAV, KC_SPC)
#define TH_ENT LT(_NUM, KC_ENT)
#define TH_BSP LT(_LSYM, KC_BSPC)
// and on slash key...
#define TH_SLS LT(_FN, KC_SLSH)

// Other combinations for convenience of referencing
#define KC_ALF LGUI(KC_SPC)
#define KC_CTAB LGUI(KC_TAB)


// Other keys for quick access to symbols
#define GBP LALT(KC_3)              // £
#define DEG LSFT(LALT(KC_8))        // °
#define PMIN LSFT(LALT(KC_EQL))     // ±
#define PTAB LSFT(LGUI(KC_LBRC))    // previous tab/buffer
#define NTAB LSFT(LGUI(KC_RBRC))    // next tab/buffer

const uint16_t PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = {
  [_QWERTY] = LAYOUT_split_3x5_2(
    KC_Q,    KC_W,    KC_E,    KC_R,    KC_T,            KC_Y,    KC_U,    KC_I,    KC_O,   KC_P,
    HOME_A,  HOME_S,  HOME_D,  HOME_F,  KC_G,            KC_H,    HOME_J,  HOME_K,  HOME_L, HOME_QT,
    KC_Z,    KC_X,    KC_C,    KC_V,    KC_B,            KC_N,    KC_M,    KC_COMM, KC_DOT, TH_SLS,
                               TH_TAB,  TH_SPC,          TH_ENT,  TH_BSP
  ),
  [_NAV] = LAYOUT_split_3x5_2(
    XXXXXXX, XXXXXXX, XXXXXXX, XXXXXXX, XXXXXXX,         PTAB,    KC_PGDN,  KC_PGUP,         NTAB,     KC_DELETE,
    KC_LCTL, KC_LALT, KC_LGUI, KC_LSFT, KC_ESC,          KC_LEFT, KC_DOWN,  KC_UP,           KC_RIGHT, XXXXXXX,
    XXXXXXX, XXXXXXX, XXXXXXX, XXXXXXX, XXXXXXX,         KC_HOME, KC_ALF,   KC_CTAB, KC_END,   XXXXXXX,
                               -------, -------,         -------, -------
  ),
  [_NUM] = LAYOUT_split_3x5_2(
    KC_SLSH,   KC_7,    KC_8,    KC_9,  KC_ASTR,        XXXXXXX, XXXXXXX, XXXXXXX, XXXXXXX, XXXXXXX,
    KC_MINS,   KC_4,    KC_5,    KC_6,  KC_PLUS,        KC_ESC,  KC_LSFT, KC_LGUI, KC_LALT, KC_LCTL,
    KC_EQL,    KC_1,    KC_2,    KC_3,  KC_DOT,         XXXXXXX, XXXXXXX, XXXXXXX, XXXXXXX, KC_ENT,
                                 -------, KC_0,         -------, -------
  ),
  [_RSYM] = LAYOUT_split_3x5_2(
    XXXXXXX, XXXXXXX, XXXXXXX, XXXXXXX, XXXXXXX,       GBP,     KC_LBRC, KC_UNDS, KC_RBRC, DEG,
    KC_LCTL, KC_LALT, KC_LGUI, KC_LSFT, KC_ESC,        KC_PERC, KC_LCBR, KC_EQL,  KC_RCBR, KC_PIPE,
    XXXXXXX, XXXXXXX, XXXXXXX, XXXXXXX, XXXXXXX,       KC_MINS, KC_AMPR, KC_CIRC, KC_TILD, PMIN,
                               -------,  KC_SPC,       -------, -------
  ),
  [_LSYM] = LAYOUT_split_3x5_2(
    KC_EXLM,   KC_LT,   KC_DLR,  KC_GT,   KC_AT,         XXXXXXX, XXXXXXX,  XXXXXXX,  XXXXXXX, XXXXXXX,
    KC_BSLASH, KC_LPRN, KC_DQUO, KC_RPRN, KC_HASH,       KC_ESC,  KC_LSFT,  KC_LGUI,  KC_LALT, KC_LCTL,
    KC_SCLN,   KC_COLN, KC_ASTR, KC_PLUS, KC_GRV,        XXXXXXX, XXXXXXX,  XXXXXXX,  XXXXXXX, XXXXXXX,
                                 -------, -------,       -------, -------
  ),
  [_FN] = LAYOUT_split_3x5_2(
    RESET,   KC_F7,   KC_F8,   KC_F9,   KC_F10,          XXXXXXX, KC__VOLDOWN, KC__MUTE, KC__VOLUP, XXXXXXX,
    XXXXXXX, KC_F4,   KC_F5,   KC_F6,   KC_F11,          KC_ESC,  KC_LSFT,     KC_LGUI,  KC_LALT,   KC_LCTL,
    KC_CAPS, KC_F1,   KC_F2,   KC_F3,   KC_F12,          XXXXXXX, KC_MPRV,     KC_MPLY,  KC_MNXT,   _______,
                               -------, -------,         -------, -------
  )
};


/* bool app_switch_frwd_active = false; */

/* bool process_record_user(uint16_t keycode, keyrecord_t *record) { */

/*     // caps word (in features/caps_word.c/h) */
/*     /\* if (!process_caps_word(keycode, record)) { return false; } *\/ */

/*         // cmd-tab swapper (in features/swapper.c/h) */
/*         /\* update_swapper(&app_switch_frwd_active, KC_LGUI, KC_TAB, APP_SWITCH_FRWD, *\/ */
/*                     keycode, record); */
/*         /\* return true; *\/ */
/*     /\* return true; *\/ */

/* return true; */
/* } */
